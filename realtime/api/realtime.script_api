- name: realtime
  type: table
  desc: Functions and constants for interacting with Photon Realtime

  members:
  - name: init
    type: function
    desc: Initialize Realtime by creating a load balanced client 
    parameters:
    - name: app_id
      type: string

  - name: connect
    type: function
    desc: Connect to the server. 
    parameters:
    - name: options
      type: table
      desc: Table with connection options
      - name: username
        type: string
      - name: use_datagram_encryption
        type: boolean
      - name: server_type
        type: number
        desc: See SERVER_TYPE_* enums
      - name: server_address
        type: string
        desc: The IP address or domain name and optionally the port number to connect to. IP addresses can be in IPv4 or IPv6 format
      - name: auth_data
        type: string
        desc: Sets the HTTP POST data, that will be forwarded to the authentication service, to the provided data.
      - name: auth_parameters
        type: string
        desc: The HTTP GET parameters that will be forwarded to the authentication service to the provided parameters.
      - name: auth_type
        type: number
        desc: The type of the &quot;Custom Authentication&quot; service that will be used. See AUTH_* enums
    - name: callback
      type: function

  - name: update
    type: function
    desc: Update Realtime. Call this from a script component.

  - name: disconnect
    type: function
    desc: Disconnect from server. 

  - name: join_lobby
    type: function
    desc: Join lobby. 
    parameters:
    - name: lobby_name
      type: string
    - name: lobby_type
      type: number

  - name: leave_lobby
    type: function
    desc: Leave lobby. 

  - name: create_room
    type: function
    desc: Create room. 
    parameters:
    - name: game_id
      type: string
      desc: The name to create a room with. Must be unique and not in use or the room can&#x27;t be created. If this is an empty string, then the server will assign a GUID as name.
    - name: room_options
      type: table
      - name: is_visible
        type: boolean
      - name: is_open
        type: boolean
      - name: supress_room_events
        type: boolean
      - name: max_players
        type: number
      - name: player_ttl
        type: number
      - name: empty_room_ttl
        type: number
      - name: lobby_type
        type: number
        desc: Realtime.LOBBYTYPE_* enum
      - name: lobby_name
        type: string
      - name: publish_user_id
        type: string
      - name: direct_mode
        type: numbmer
        desc: Realtime.DIRECTMODE_* enum
      - name: props_listed_in_lobby
        type: table
      - name: custom_room_properties
        type: table
    - name: expected_users
      type: table

  - name: join_room
    type: function
    desc: Join room. 
    parameters:
    - name: game_id
      type: string
      desc: The name to create a room with. Must be unique and not in use or the room can&#x27;t be created. If this is an empty string, then the server will assign a GUID as name.
    - name: join_options
      type: table
      - name: rejoin
        type: boolean
      - name: cache_slice_index
        type: number
      - name: expected_users
        type: table

  - name: join_or_create_room
    type: function
    desc: Join or create room. 
    parameters:
    - name: game_id
      type: string
      desc: The name to create a room with. Must be unique and not in use or the room can&#x27;t be created. If this is an empty string, then the server will assign a GUID as name.
    - name: room_options
      type: table
      - name: is_visible
        type: boolean
      - name: is_open
        type: boolean
      - name: supress_room_events
        type: boolean
      - name: max_players
        type: number
      - name: player_ttl
        type: number
      - name: empty_room_ttl
        type: number
      - name: lobby_type
        type: number
        desc: Realtime.LOBBYTYPE_* enum
      - name: lobby_name
        type: string
      - name: publish_user_id
        type: string
      - name: direct_mode
        type: numbmer
        desc: Realtime.DIRECTMODE_* enum
      - name: props_listed_in_lobby
        type: table
      - name: custom_room_properties
        type: table
    - name: join_options
      type: table
      - name: custom_room_properties
        type: table
      - name: max_players
        type: number
      - name: matchmaking_mode
        type: number
        desc: Realtime.MATCHMAKINGMODE_* enum
      - name: lobby_name
        type: string
      - name: lobby_type
        type: number
        desc: Realtime.LOBBYTYPE_* enum
      - name: sql_lobby_filter
        type: string
      - name: expected_users
        type: table

  - name: join_or_create_random_room
    type: function
    desc: Join or create random room. 
    parameters:
    - name: game_id
      type: string
      desc: The name to create a room with. Must be unique and not in use or the room can&#x27;t be created. If this is an empty string, then the server will assign a GUID as name.
    - name: room_options
      type: table
      - name: is_visible
        type: boolean
      - name: is_open
        type: boolean
      - name: supress_room_events
        type: boolean
      - name: max_players
        type: number
      - name: player_ttl
        type: number
      - name: empty_room_ttl
        type: number
      - name: lobby_type
        type: number
        desc: Realtime.LOBBYTYPE_* enum
      - name: lobby_name
        type: string
      - name: publish_user_id
        type: string
      - name: direct_mode
        type: numbmer
        desc: Realtime.DIRECTMODE_* enum
      - name: props_listed_in_lobby
        type: table
      - name: custom_room_properties
        type: table
    - name: join_options
      type: table
      - name: custom_room_properties
        type: table
      - name: max_players
        type: number
      - name: matchmaking_mode
        type: number
        desc: Realtime.MATCHMAKINGMODE_* enum
      - name: lobby_name
        type: string
      - name: lobby_type
        type: number
        desc: Realtime.LOBBYTYPE_* enum
      - name: sql_lobby_filter
        type: string
      - name: expected_users
        type: table

  - name: join_random_room
    type: function
    desc: Join random room. 
    parameters:
    - name: join_options
      type: table
      - name: custom_room_properties
        type: table
      - name: max_players
        type: number
      - name: matchmaking_mode
        type: number
        desc: Realtime.MATCHMAKINGMODE_* enum
      - name: lobby_name
        type: string
      - name: lobby_type
        type: number
        desc: Realtime.LOBBYTYPE_* enum
      - name: sql_lobby_filter
        type: string
      - name: expected_users
        type: table

  - name: leave_room
    type: function
    desc: Leave room. 
    parameters:
    - name: will_come_back
      type: boolean
    - name: send_auth_cookie
      type: boolean

  - name: get_room_list
    type: function
    desc: Get room list. 

  - name: raise_event
    type: function
    desc: Sends in-game data to other players in the game. 
    parameters:
    - name: reliable
      type: boolean
    - name: parameter
      type: number
    - name: event_code
      type: number
    - name: options
      type: table
      desc: (channel_id, event_caching, receiver_group, interest_group, cache_slice_index, target_players, web_flags, encrypt)
      - name: channel_id
        type: number
      - name: event_caching
        type: number
      - name: receiver_group
        type: number
      - name: interest_group
        type: number
      - name: cache_slice_index
        type: number
      - name: target_players
        type: number
      - name: web_flags
        type: number
      - name: encrypt
        type: boolean
    returns:
    - name: n
      type: boolea


  - name: set_auto_join_lobby
    type: function
    desc: Set the auto join lobby flag. The value of the autoJoinLobby flag determines if the client will automatically join the default lobby whenever it has successfully connected and whenever it leaves a game room.
    parameters:
    - name: auto_join
      type: boolean

  - name: EVENT_CONNECTIONERRORRETURN
    type: number
    desc: EVENT_CONNECTIONERRORRETURN

  - name: EVENT_CLIENTERRORRETURN
    type: number
    desc: EVENT_CLIENTERRORRETURN

  - name: EVENT_WARNINGRETURN
    type: number
    desc: EVENT_WARNINGRETURN

  - name: EVENT_SERVERERRORRETURN
    type: number
    desc: EVENT_SERVERERRORRETURN

  - name: EVENT_JOINROOMEVENTACTION
    type: number
    desc: EVENT_JOINROOMEVENTACTION

  - name: EVENT_LEAVEROOMEVENTACTION
    type: number
    desc: EVENT_LEAVEROOMEVENTACTION

  - name: EVENT_CUSTOMEVENTACTION
    type: number
    desc: EVENT_CUSTOMEVENTACTION

  - name: EVENT_CONNECTRETURN
    type: number
    desc: EVENT_CONNECTRETURN

  - name: EVENT_DISCONNECTRETURN
    type: number
    desc: EVENT_DISCONNECTRETURN

  - name: EVENT_CREATEROOMRETURN
    type: number
    desc: EVENT_CREATEROOMRETURN

  - name: EVENT_JOINORCREATEROOMRETURN
    type: number
    desc: EVENT_JOINORCREATEROOMRETURN

  - name: EVENT_JOINRANDOMORCREATEROOMRETURN
    type: number
    desc: EVENT_JOINRANDOMORCREATEROOMRETURN

  - name: EVENT_JOINROOMRETURN
    type: number
    desc: EVENT_JOINROOMRETURN

  - name: EVENT_JOINRANDOMROOMRETURN
    type: number
    desc: EVENT_JOINRANDOMROOMRETURN

  - name: EVENT_LEAVEROOMRETURN
    type: number
    desc: EVENT_LEAVEROOMRETURN

  - name: EVENT_JOINLOBBYRETURN
    type: number
    desc: EVENT_JOINLOBBYRETURN

  - name: EVENT_LEAVELOBBYRETURN
    type: number
    desc: EVENT_LEAVELOBBYRETURN

  - name: EVENT_ONFINDFRIENDSRESPONSE
    type: number
    desc: EVENT_ONFINDFRIENDSRESPONSE

  - name: EVENT_ONLOBBYSTATSRESPONSE
    type: number
    desc: EVENT_ONLOBBYSTATSRESPONSE

  - name: EVENT_WEBRPCRETURN
    type: number
    desc: EVENT_WEBRPCRETURN

  - name: EVENT_ONROOMLISTUPDATE
    type: number
    desc: EVENT_ONROOMLISTUPDATE

  - name: EVENT_ONROOMPROPERTIESCHANGE
    type: number
    desc: EVENT_ONROOMPROPERTIESCHANGE

  - name: EVENT_ONPLAYERPROPERTIESCHANGE
    type: number
    desc: EVENT_ONPLAYERPROPERTIESCHANGE

  - name: EVENT_ONAPPSTATSUPDATE
    type: number
    desc: EVENT_ONAPPSTATSUPDATE

  - name: EVENT_ONLOBBYSTATSUPDATE
    type: number
    desc: EVENT_ONLOBBYSTATSUPDATE

  - name: EVENT_ONCACHESLICECHANGED
    type: number
    desc: EVENT_ONCACHESLICECHANGED

  - name: EVENT_ONMASTERCLIENTCHANGED
    type: number
    desc: EVENT_ONMASTERCLIENTCHANGED

  - name: EVENT_ONCUSTOMAUTHENTICATIONINTERMEDIATESTEP
    type: number
    desc: EVENT_ONCUSTOMAUTHENTICATIONINTERMEDIATESTEP

  - name: EVENT_ONAVAILABLEREGIONS
    type: number
    desc: EVENT_ONAVAILABLEREGIONS

  - name: EVENT_ONSECRETRECEIVAL
    type: number
    desc: EVENT_ONSECRETRECEIVAL

  - name: EVENT_ONDIRECTCONNECTIONESTABLISHED
    type: number
    desc: EVENT_ONDIRECTCONNECTIONESTABLISHED

  - name: EVENT_ONDIRECTCONNECTIONFAILEDTOESTABLISH
    type: number
    desc: EVENT_ONDIRECTCONNECTIONFAILEDTOESTABLISH

  - name: EVENT_ONDIRECTMESSAGE
    type: number
    desc: EVENT_ONDIRECTMESSAGE

  - name: EVENT_ONCUSTOMOPERATIONRESPONSE
    type: number
    desc: EVENT_ONCUSTOMOPERATIONRESPONSE

  - name: EVENT_ONGETROOMLISTRESPONSE
    type: number
    desc: EVENT_ONGETROOMLISTRESPONSE

  - name: AUTH_CUSTOM
    type: number
    desc: Use a custom authentication service.

  - name: AUTH_STEAM
    type: number
    desc: Authenticates users by their Steam Account. Pass L&quot;ticket=[ticket]&quot; to setParameters().

  - name: AUTH_FACEBOOK
    type: number
    desc: Authenticates users by their Facebook Account. Pass L&quot;token=[token]&quot; to setParameters().

  - name: AUTH_OCULUS
    type: number
    desc: Authenticates users by their Oculus Account. Pass L&quot;userid=[userid]&amp;nonce=[nonce]&quot; to setParameters().

  - name: AUTH_PLAYSTATION_4
    type: number
    desc: Authenticates users by their PSN Account. Pass L&quot;token=[token]&amp;env=[env]&amp;userName=[userName]&quot; to setParameters().

  - name: AUTH_XBOX
    type: number
    desc: Authenticates users by their XBox Network Account. Pass the XSTS token to setData().

  - name: AUTH_VIVEPORT
    type: number
    desc: Authenticates users by their HTC Viveport Account and user token. Pass L&quot;userToken=[userToken]&quot; to setParameters().

  - name: AUTH_NINTENDO_SWITCH
    type: number
    desc: Authenticates users by their Nintendo Account. Pass L&quot;token=[token]&amp;appversion=[appversion]&quot; to setParameters(). The appversion is optional.

  - name: AUTH_PLAYSTATION_5
    type: number
    desc: Authenticates users by their PSN Account. Pass L&quot;token=[token]&amp;env=[env]&amp;userName=[userName]&quot; to setParameters().

  - name: AUTH_EPIC
    type: number
    desc: Authenticates users by their Epic Online Services (EOS) Account. Pass L&quot;token=[token]&amp;ownershipToken=[ownershipToken]&quot; to setParameters(). The ownershipToken is optional.

  - name: AUTH_FACEBOOK_GAMING
    type: number
    desc: Authenticates users by their Facebook Account. Pass L&quot;token=[token]&quot; to setParameters().

  - name: AUTH_NONE
    type: number
    desc: Disables custom authentication.

  - name: SERVER_TYPE_NAME_SERVER
    type: number
    desc: Photon Cloud and for self-hosted Photon 5 or higher Server instances

  - name: SERVER_TYPE_MASTER_SERVER
    type: number
    desc: Self-hosted Photon 4 Server instances

  - name: MATCHMAKINGMODE_FILL_ROOM
    type: number
    desc: Fills up rooms (oldest first) to get players together as fast as possible. Default. Makes most sense with MaxPlayers &gt; 0 and games that can only start with more players.

  - name: MATCHMAKINGMODE_SERIAL_MATCHING
    type: number
    desc: Distributes players across available rooms sequentially but takes filters into account. Without filters, rooms get players evenly distributed.

  - name: MATCHMAKINGMODE_RANDOM_MATCHING
    type: number
    desc: Joins a (fully) random room. Expected properties must match, but aside from this, any available room might be selected.

  - name: LOBBYTYPE_DEFAULT
    type: number
    desc: This lobby type is used unless another lobby type is specified. Room lists will be sent and Client::opJoinRandomRoom() can filter by matching properties.

  - name: LOBBYTYPE_SQL_LOBBY
    type: number
    desc: This lobby type lists rooms like type DEFAULT but  SQL-like &quot;where&quot; clauses for filtering can be used with Client::opJoinRandomRoom(). This allows &#x27;bigger&#x27;, &#x27;less&#x27;, &#x27;or&#x27; and &#x27;and&#x27; combinations.

  - name: LOBBYTYPE_ASYNC_RANDOM_LOBBY
    type: number
    desc: This lobby does not send room lists. It is only used for Client::opJoinRandomRoom(). It keeps rooms available for matchmaking for a while even when there are only inactive users left.

  - name: DIRECTMODE_NONE
    type: number
    desc: Do not create any 2p2 connections between the clients. This is the default.

  - name: DIRECTMODE_ALL_TO_OTHERS
    type: number
    desc: Each client establishes a direct connection with every other client inside the room.

  - name: DIRECTMODE_MASTER_TO_OTHERS
    type: number
    desc: The master client establishes a direct connection with every other client inside the room. All other clients only establish a direct connection with the master client but not with each other.

  - name: DIRECTMODE_ALL_TO_ALL
    type: number
    desc: Each client establishes a direct connection with every client inside the room, including itself.

  - name: DIRECTMODE_MASTER_TO_ALL
    type: number
    desc: The master client establishes a direct connection with every client inside the room, including itself. All other clients only establish a direct connection with the master client but not with each other.

